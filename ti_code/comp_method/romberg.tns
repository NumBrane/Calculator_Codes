Define LibPub romberg(f_str,a,b,max_levels)=
Prgm
:Local i,j,k,n,h,romb,sum1,x_str,x_val,f_val,expr_result,str_to_eval
:newMat(max_levels+1,max_levels+1)→romb
:replace(f_str,"x",string(a))→expr_result
:approx(eval(expr_result))→fa
:replace(f_str,"x",string(b))→expr_result
:approx(eval(expr_result))→fb
:(((b-a)*(f(a)+f(b)))/(2))→romb[1,1]
:b-a→h
:For k,0,max_levels
:2^(k)→n
:((b-a)/(n))→h
:0→sum1
:  For j,1,n
:    a+(j-0.5)*h→x_val
:    approx(expr(f_str)|x=x_val)→f_val
:    sum1+f_val→sum1
:  EndFor
:  h*sum1→romb[k+1,1]
:EndFor
:For k,1,max_levels
:  For j,1,k
:     approx(romb[k+1,j]+((romb[k+1,j]-romb[k,j])/(4^(j)-1)))→romb[k+1,j+1]
:  EndFor
:EndFor
:Disp "Final Result: ",approx(romb[max_levels,max_levels])
:Return approx(romb[max_levels,max_levels])
:EndPrgm